generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admin_users {
  id             Int       @id @default(autoincrement())
  user_id        BigInt    @unique
  username       String?
  added_by       BigInt?
  added_at       DateTime? @default(now()) @db.Timestamp(6)
  is_super_admin Boolean?  @default(false)
}

model admins {
  id      Int    @id @default(autoincrement())
  user_id BigInt
}

model bot_settings {
  id            Int       @id @default(autoincrement())
  setting_key   String    @unique
  setting_value String
  updated_at    DateTime? @default(now()) @db.Timestamp(6)
}

model brands {
  id    Int    @id @default(autoincrement())
  brand String
}

model file_access_stats {
  id          Int       @id @default(autoincrement())
  user_id     BigInt
  brand       String
  model       String
  year        String
  file_id     Int?
  accessed_at DateTime? @default(now()) @db.Timestamp(6)
  files       files?    @relation(fields: [file_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([accessed_at], map: "idx_file_access_stats_accessed_at")
  @@index([brand, model], map: "idx_file_access_stats_brand_model")
}

model files {
  id                Int                 @id @default(autoincrement())
  photo             String?
  pdf               String?
  premium_photo     String?
  premium_pdf       String?
  year_id           Int?
  year              String?
  model             String?
  brand             String?
  caption           String?
  file_access_stats file_access_stats[]
}

model models {
  id       Int     @id @default(autoincrement())
  model    String
  brand_id Int?
  brand    String?
}

model owner {
  user_id           BigInt @id
  price_for_premium Int    @default(300)
}

model password {
  password String @id
}

model premium_users {
  id            BigInt @id @default(autoincrement())
  user_id       BigInt
  sub_start     String
  sub_end       String
  status        String
  period_months Int?   @default(1)

  @@index([sub_end], map: "idx_premium_users_sub_end")
}

model subscription_prices {
  id            Int       @id @default(autoincrement())
  period_months Int       @unique
  price_kopecks Int
  created_at    DateTime? @default(now()) @db.Timestamp(6)
}

model users {
  id         Int       @id @default(autoincrement())
  user_id    BigInt?   @unique
  username   String?
  name       String?
  created_at DateTime? @default(now()) @db.Timestamp(6)
  stage      Int       @default(0)
  page       Int       @default(0)
}

model years {
  id       Int     @id @default(autoincrement())
  year     String
  model_id Int?
  brand    String?
  model    String?
}
